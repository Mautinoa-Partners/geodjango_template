---

- name: set locale to {{locale}}
  action: command /usr/sbin/update-locale LANG={{locale}} LC_ALL={{locale}}
  become: true

- name: install required system packages.
  action: apt pkg={{item}} state=installed update-cache=yes install_recommends=yes 
  become: true
  with_items:
    - build-essential
    - cython
    - gdal-bin
    - gfortran
    - libgdal-dev
    - libgeos-dev
    - libpq-dev
    - nginx
    - nodejs-legacy
    - npm
    - postgresql
    - postgresql-contrib
    - python-apt
    - python-dev
    - python-pip
    - python-pycurl
    - python-setuptools
    - python-software-properties
    - python-virtualenv
    - supervisor
    - vim

- name: do upgrades to newly installed packages
  apt: upgrade=full
  become: true

- name: enable ufw incoming and outgoing
  ufw: state=enabled policy=allow
  become: true

- name: delete a virtualenv if it exists
  shell: rm -rf {{ venv_path }}
  ignore_errors: yes
  become: true

- name: create python virtualenv in /home/vagrant/project_directory with requirements
  action: pip virtualenv={{ venv_path }} virtualenv_command=/usr/bin/virtualenv virtualenv_site_packages=yes requirements=/vagrant/resources/python_requirements.txt state=latest
  become: true

- name: if there is a django project in /vagrant, delete it
  file: path=/vagrant/{{project_name}} state=absent
  become: true
  ignore_errors: yes
  when: create_new_project == True

- name: create a new django project in the /home/vagrant directory using the new virtualenv
  shell: "cd /vagrant/; {{ venv_path }}/bin/django-admin.py startproject {{ project_name }}"
  when: create_new_project == True

- name: remove the settings.py from the new django project
  file: dest=/vagrant/{{ project_name }}/{{ project_name }}/settings.py state=absent
  become: true
  when: create_new_project == True

- name: create the new settings.py file using the template (fills in database settings and sets static_root)
  template: src=draft_django_settings.py.j2 dest={{ django_dir }}/{{ project_name }}/settings.py owner=vagrant group=vagrant mode=0644
  when: create_new_project == True


- name: Run Django database makemigrations
  django_manage: >
    command="makemigrations"
    app_path=/vagrant/{{ project_name }}
    virtualenv={{ venv_path }}

- name: Run Django database migrate
  django_manage: >
    command=migrate
    app_path=/vagrant/{{ project_name }}
    virtualenv={{ venv_path }}

- name: Run Django afdawango
  django_manage: >
    command=collectstatic
    app_path=/vagrant/{{ project_name }}
    virtualenv={{ venv_path }}

- name: create ~/.bash_profile to make life easier
  template: src=bash_profile.j2 dest=/home/vagrant/.bash_profile owner=vagrant group=vagrant

- name: fix django directory permissions
  file: >
    state=directory
    owner=vagrant
    group=www-data
    recurse=yes
    path={{ django_dir }}







#- name: create the npm package.json file to the static directory
#  template: src=package.json dest=/vagrant/static/package.json owner=root group=root mode=0644
#  become: true
#
#- name: install npm components
#  become: true
#  npm: path=/vagrant/static/ state=latest
#  when: create_new_static == True
