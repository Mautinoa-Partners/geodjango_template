{
  "name": "metalsmith-layouts",
  "author": {
    "name": "superwolff",
    "email": "superwolff@superwolff.nl",
    "url": "http://superwolff.nl/"
  },
  "description": "A metalsmith plugin for layouts.",
  "repository": {
    "type": "git",
    "url": "git://github.com/superwolff/metalsmith-layouts.git"
  },
  "version": "1.4.2",
  "license": "MIT",
  "main": "lib/index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "async": "^1.3.0",
    "consolidate": "^0.13.1",
    "debug": "^2.2.0",
    "extend": "^3.0.0",
    "fs-readdir-recursive": "^1.0.0",
    "is-utf8": "^0.2.0",
    "lodash.omit": "^3.1.0",
    "multimatch": "^2.0.0"
  },
  "devDependencies": {
    "assert-dir-equal": "^1.0.1",
    "eslint": "^1.0.0",
    "handlebars": "^4.0.2",
    "metalsmith": "^2.0.1",
    "mocha": "^2.2.5",
    "swig": "^1.4.2"
  },
  "readme": "# metalsmith-layouts\n\n[![npm](https://img.shields.io/npm/v/metalsmith-layouts.svg)](https://www.npmjs.com/package/metalsmith-layouts) [![Build Status](https://travis-ci.org/superwolff/metalsmith-layouts.svg)](https://travis-ci.org/superwolff/metalsmith-layouts) [![Dependency Status](https://david-dm.org/superwolff/metalsmith-layouts.svg)](https://david-dm.org/superwolff/metalsmith-layouts) [![devDependency Status](https://david-dm.org/superwolff/metalsmith-layouts/dev-status.svg)](https://david-dm.org/superwolff/metalsmith-layouts#info=devDependencies) [![npm](https://img.shields.io/npm/dm/metalsmith-layouts.svg)](https://www.npmjs.com/package/metalsmith-layouts)\n\n> A metalsmith plugin for layouts\n\nThis plugin allows you to apply layouts to your source files. It passes your source files to the selected layout as `contents` and renders the result with the templating engine of your choice. You can use any templating engine supported by [consolidate.js](https://github.com/tj/consolidate.js#supported-template-engines).\n\n## Installation\n\n```bash\n$ npm install metalsmith-layouts\n```\n\n## Example\n\nConfiguration in `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"handlebars\"\n    }\n  }\n}\n```\n\nSource file `src/index.html`:\n\n```html\n---\nlayout: layout.html\ntitle: The title\n---\n<p>The contents</p>\n```\n\nLayout `layouts/layout.html`:\n\n```html\n<!doctype html>\n<html>\n<head>\n  <title>{{title}}</title>\n</head>\n<body>\n  {{{contents}}}\n</body>\n</html>\n```\n\nResults in `build/index.html`:\n\n```html\n<!doctype html>\n<html>\n<head>\n  <title>The title</title>\n</head>\n<body>\n  <p>The contents</p>\n</body>\n</html>\n```\n\nThis is a very basic example. For a ready-to-use boilerplate that utilizes this plugin see [metalsmith-boilerplates](https://github.com/superwolff/metalsmith-boilerplates).\n\n## Options\n\nYou can pass options to `metalsmith-layouts` with the [Javascript API](https://github.com/segmentio/metalsmith#api) or [CLI](https://github.com/segmentio/metalsmith#cli). The options are:\n\n* [engine](#engine): templating engine (required)\n* [default](#default): default template (optional)\n* [directory](#directory): directory for the layouts, layouts by default (optional)\n* [partials](#partials): directory for the partials (optional)\n* [pattern](#pattern): only files that match this pattern will be processed (optional)\n\n### engine\n\nThe engine that will render your layouts. Metalsmith-layouts uses [consolidate.js](https://github.com/tj/consolidate.js) to render templating syntax, so any engine [supported by consolidate.js](https://github.com/tj/consolidate.js#supported-template-engines) can be used. Don't forget to install the templating engine separately. So this `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"swig\"\n    }\n  }\n}\n```\n\nWill render your layouts with swig.\n\n### default\n\nThe default layout to use. Can be overridden with the `layout` key in each file's YAML frontmatter. If a `default` layout hasn't been specified, `metalsmith-layouts` will only process files with a `layout` option in their front-matter. Don't forget to specify the file extension. So this `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"swig\",\n      \"default\": \"default.html\"\n    }\n  }\n}\n```\n\nWill apply the `default.html` layout to all files, unless specified otherwise in the frontmatter.\n\n### directory\n\nThe directory where `metalsmith-layouts` looks for the layouts. By default this is `layouts`. So this `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"swig\",\n      \"directory\": \"templates\"\n    }\n  }\n}\n```\n\nWill look for layouts in the `templates` directory, instead of in `layouts`.\n\n### partials\n\nThe directory where `metalsmith-layouts` looks for partials. Each partial is named by removing the file extension from its path (relative to the partials directory), so make sure to avoid duplicates. So this `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"handlebars\",\n      \"partials\": \"partials\"\n    }\n  }\n}\n```\n\nWould mean that a partial at `partials/nav.html` can be used in layouts as `{{> nav }}`, and `partials/nested/footer.html` can be used as `{{> nested/footer }}`. Note that passing anything but a string to the `partials` option will pass the option on to consolidate.\n\n### pattern\n\nOnly files that match this pattern will be processed. So this `metalsmith.json`:\n\n```json\n{\n  \"plugins\": {\n    \"metalsmith-layouts\": {\n      \"engine\": \"swig\",\n      \"pattern\": \"*.md\"\n    }\n  }\n}\n```\n\nWould only process files that have the `.md` extension.\n\n### Consolidate\n\nAny unrecognised options will be passed on to consolidate.js. You can use this, for example, to disable caching by passing `cache: false`. See the [consolidate.js documentation](https://github.com/tj/consolidate.js) for all options supported by consolidate.\n\n## Origins\n\nThis plugin is a fork of the now deprecated [metalsmith-templates](https://github.com/segmentio/metalsmith-templates). Splitting up `metalsmith-templates` into two plugins was suggested by Ian Storm Taylor. The results are:\n\n* [metalsmith-in-place](https://github.com/superwolff/metalsmith-in-place): render templating syntax in your source files.\n* [metalsmith-layouts](https://github.com/superwolff/metalsmith-layouts): apply layouts to your source files.\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/superwolff/metalsmith-layouts/issues"
  },
  "_id": "metalsmith-layouts@1.4.2",
  "dist": {
    "shasum": "5522c046c2523b10e389e636d12ed76024c96bdd"
  },
  "_from": "metalsmith-layouts@1.4.2",
  "_resolved": "https://registry.npmjs.org/metalsmith-layouts/-/metalsmith-layouts-1.4.2.tgz"
}
